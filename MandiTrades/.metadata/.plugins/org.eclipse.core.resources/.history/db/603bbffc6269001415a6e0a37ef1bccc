package com.manditrades.fragments;

import java.util.ArrayList;

import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.google.gson.Gson;
import com.loopj.android.image.SmartImageView;
import com.manditrades.R;
import com.manditrades.activities.CreateAlertActivity;
import com.manditrades.activities.NewPostActivity;
import com.manditrades.cache.CommoditiesCache;
import com.manditrades.jsonwrapper.AlertList;
import com.manditrades.jsonwrapper.MTCommodity;
import com.manditrades.jsonwrapper.MTCommodityList;
import com.manditrades.util.JsonDataCallback;
import com.manditrades.util.LanguageScripts;
import com.manditrades.util.MTURLHelper;

public class NewSaleFragment extends Fragment {

	private Context context;

	private LinearLayout lLinsideHSV1;
	private LinearLayout lLinsideHSV2;
	private LinearLayout lLinsideHSV3;
	private LinearLayout lLinsideHSV4;
	private LinearLayout lLinsideHSV5;

	private TextView fruitsTV;
	private TextView vegetablesTV;
	private TextView cerealsTV;
	private TextView pulsesTV;
	private TextView spicesTV;

	private AlertList alertList;

	private View child;
	private LayoutInflater inflater;

	private SmartImageView image;
	private TextView image_name;

	private ArrayList<MTCommodity> commodities;
	private MTCommodity mCommodity;

	private boolean hasInitialized;

	private boolean createAlert;

	private SharedPreferences preferences;

	public NewSaleFragment() {

	}

	@Override
	public void onResume() {
		super.onResume();

		String source = preferences.getString("SOURCE", null);

		if (source != null && source.equalsIgnoreCase("CreateAlertActivity")) {
			getFragmentManager().popBackStack();
			Editor editor = preferences.edit();
			editor.remove("SOURCE");
			editor.commit();
		}
		
		

	}
	
	@Override
	public void onPause() {
		super.onPause();
		
	}

	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);

		context = activity;

		saveCommodities();
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		View rootView = inflater.inflate(R.layout.fragment_new_sale, container,
				false);

		if (getArguments() != null) {
			String source = getArguments().getString("FROM");
			if (source.equalsIgnoreCase("AlertsFragment")) {
				createAlert = true;
				getArguments().getSerializable("ALERT_LIST");
			}
		}

		initComponents(rootView);

		if (CommoditiesCache.getCommoditiesCache()
				.getSingleVarietyCommodities() != null) {
			setValues();
			setCommodities();
		}

		return rootView;
	}

	private void initComponents(View rootView) {
		preferences = PreferenceManager.getDefaultSharedPreferences(context);

		lLinsideHSV1 = (LinearLayout) rootView.findViewById(R.id.linear_1);
		lLinsideHSV2 = (LinearLayout) rootView.findViewById(R.id.linear_2);
		lLinsideHSV3 = (LinearLayout) rootView.findViewById(R.id.linear_3);
		lLinsideHSV4 = (LinearLayout) rootView.findViewById(R.id.linear_4);
		lLinsideHSV5 = (LinearLayout) rootView.findViewById(R.id.linear_5);

		fruitsTV = (TextView) rootView.findViewById(R.id.fruit_text);
		vegetablesTV = (TextView) rootView.findViewById(R.id.vegetable_text);
		cerealsTV = (TextView) rootView.findViewById(R.id.cereal_text);
		pulsesTV = (TextView) rootView.findViewById(R.id.pulse_text);
		spicesTV = (TextView) rootView.findViewById(R.id.spice_text);

		hasInitialized = true;
	}

	@Override
	public void setMenuVisibility(boolean menuVisible) {
		super.setMenuVisibility(menuVisible);
		if (menuVisible && hasInitialized) {
			setValues();
			setCommodities();
		}
	}

	private void setValues() {
		int language = preferences.getInt("LANGUAGE", 0);
		LanguageScripts scripts = new LanguageScripts();
		fruitsTV.setText(scripts.fruits[language]);
		vegetablesTV.setText(scripts.vegetables[language]);
		cerealsTV.setText(scripts.cereals[language]);
		pulsesTV.setText(scripts.pulses[language]);
		spicesTV.setText(scripts.spices[language]);

		((Activity) context).getActionBar().setTitle(
				scripts.selectCommodity[language]);
	}

	private void setCommodities() {

		ArrayList<MTCommodity> singleVarietyCommodities = CommoditiesCache
				.getCommoditiesCache().getSingleVarietyCommodities();

		for (final MTCommodity commodity : singleVarietyCommodities) {

			if (commodity.getCategory().equalsIgnoreCase("Fruits")) {
				inflater = (LayoutInflater) context
						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				child = inflater
						.inflate(R.layout.newsale_template, null, false);

				child.setPadding(5, 5, 5, 5);

				image = (SmartImageView) child.findViewById(R.id.image);
				image_name = (TextView) child.findViewById(R.id.image_name);

				image.setImageUrl(CommoditiesCache.getCommoditiesCache()
						.getCommodityUrl(
								commodity.getCommodity() + "_"
										+ commodity.getVariety()));

				image_name.setText(commodity.getCommodity());
				lLinsideHSV1.addView(child);

				if (child != null)
					child.setOnClickListener(new OnClickListener() {
						@Override
						public void onClick(View v) {

							CommoditiesCache.getCommoditiesCache()
									.setVarieties(commodities,
											commodity.getCommodity());

							Intent intent;

							if (createAlert) {
								intent = new Intent(context,
										CreateAlertActivity.class);
								intent.putExtra("ALERT_LIST", alertList);
							} else
								intent = new Intent(context,
										NewPostActivity.class);

							intent.putExtra("SELECTED_CATEGORY",
									commodity.getCategory());
							intent.putExtra("SELECTED_COMMODITY",
									commodity.getCommodity());
							startActivity(intent);
						}
					});

			} else if (commodity.getCategory().equalsIgnoreCase("Vegetables")) {
				inflater = (LayoutInflater) context
						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				child = inflater
						.inflate(R.layout.newsale_template, null, false);

				child.setPadding(5, 5, 5, 5);

				image = (SmartImageView) child.findViewById(R.id.image);
				image_name = (TextView) child.findViewById(R.id.image_name);

				image.setImageUrl(CommoditiesCache.getCommoditiesCache()
						.getCommodityUrl(
								commodity.getCommodity() + "_"
										+ commodity.getVariety()));

				image_name.setText(commodity.getCommodity());
				lLinsideHSV2.addView(child);

				if (child != null)
					child.setOnClickListener(new OnClickListener() {
						@Override
						public void onClick(View v) {

							CommoditiesCache.getCommoditiesCache()
									.setVarieties(commodities,
											commodity.getCommodity());

							Intent intent;

							if (createAlert) {
								intent = new Intent(context,
										CreateAlertActivity.class);
								intent.putExtra("ALERT_LIST", alertList);
							} else
								intent = new Intent(context,
										NewPostActivity.class);
							intent.putExtra("SELECTED_CATEGORY",
									commodity.getCategory());
							intent.putExtra("SELECTED_COMMODITY",
									commodity.getCommodity());
							startActivity(intent);
						}
					});

			} else if (commodity.getCategory().equalsIgnoreCase("Cereals")) {
				inflater = (LayoutInflater) context
						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				child = inflater
						.inflate(R.layout.newsale_template, null, false);

				child.setPadding(5, 5, 5, 5);

				image = (SmartImageView) child.findViewById(R.id.image);
				image_name = (TextView) child.findViewById(R.id.image_name);

				image.setImageUrl(CommoditiesCache.getCommoditiesCache()
						.getCommodityUrl(
								commodity.getCommodity() + "_"
										+ commodity.getVariety()));

				image_name.setText(commodity.getCommodity());
				lLinsideHSV3.addView(child);

				if (child != null)
					child.setOnClickListener(new OnClickListener() {
						@Override
						public void onClick(View v) {

							CommoditiesCache.getCommoditiesCache()
									.setVarieties(commodities,
											commodity.getCommodity());

							Intent intent;

							if (createAlert) {
								intent = new Intent(context,
										CreateAlertActivity.class);
								intent.putExtra("ALERT_LIST", alertList);
							} else
								intent = new Intent(context,
										NewPostActivity.class);
							intent.putExtra("SELECTED_CATEGORY",
									commodity.getCategory());
							intent.putExtra("SELECTED_COMMODITY",
									commodity.getCommodity());
							startActivity(intent);
						}
					});

			} else if (commodity.getCategory().equalsIgnoreCase("Pulses")) {
				inflater = (LayoutInflater) context
						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				child = inflater
						.inflate(R.layout.newsale_template, null, false);

				child.setPadding(5, 5, 5, 5);

				image = (SmartImageView) child.findViewById(R.id.image);
				image_name = (TextView) child.findViewById(R.id.image_name);

				image.setImageUrl(CommoditiesCache.getCommoditiesCache()
						.getCommodityUrl(
								commodity.getCommodity() + "_"
										+ commodity.getVariety()));

				image_name.setText(commodity.getCommodity());
				lLinsideHSV4.addView(child);

				if (child != null)
					child.setOnClickListener(new OnClickListener() {
						@Override
						public void onClick(View v) {

							CommoditiesCache.getCommoditiesCache()
									.setVarieties(commodities,
											commodity.getCommodity());

							Intent intent;

							if (createAlert) {
								intent = new Intent(context,
										CreateAlertActivity.class);
								intent.putExtra("ALERT_LIST", alertList);
							} else
								intent = new Intent(context,
										NewPostActivity.class);
							intent.putExtra("SELECTED_CATEGORY",
									commodity.getCategory());
							intent.putExtra("SELECTED_COMMODITY",
									commodity.getCommodity());
							startActivity(intent);
						}
					});

			} else if (commodity.getCategory().equalsIgnoreCase("Spices")) {
				inflater = (LayoutInflater) context
						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				child = inflater
						.inflate(R.layout.newsale_template, null, false);

				child.setPadding(5, 5, 5, 5);

				image = (SmartImageView) child.findViewById(R.id.image);
				image_name = (TextView) child.findViewById(R.id.image_name);

				image.setImageUrl(CommoditiesCache.getCommoditiesCache()
						.getCommodityUrl(
								commodity.getCommodity() + "_"
										+ commodity.getVariety()));

				image_name.setText(commodity.getCommodity());
				lLinsideHSV5.addView(child);

				if (child != null)
					child.setOnClickListener(new OnClickListener() {
						@Override
						public void onClick(View v) {

							CommoditiesCache.getCommoditiesCache()
									.setVarieties(commodities,
											commodity.getCommodity());

							Intent intent;

							if (createAlert) {
								intent = new Intent(context,
										CreateAlertActivity.class);
								intent.putExtra("ALERT_LIST", alertList);
							} else
								intent = new Intent(context,
										NewPostActivity.class);
							intent.putExtra("SELECTED_CATEGORY",
									commodity.getCategory());
							intent.putExtra("SELECTED_COMMODITY",
									commodity.getCommodity());
							startActivity(intent);
						}
					});

			}
		}

		// CommoditiesCache cache =
		// CommoditiesCache.getCommoditiesCache();
		//
		// cache.setSingleVarietyCommodities(commodities
		// .getMtCommodityList());
		//
		// cache.setVarieties(commodities.getMtCommodityList());

	}

	private void saveCommodities() {
		String url = MTURLHelper.getAPIEndpointURL(MTURLHelper.comodityURL);

		String method = "GET";

		Object[] objects = { url, method, null, null };

		JsonDataCallback callback = new JsonDataCallback(context) {

			@Override
			public void receiveData(JSONObject responseJson) {
				Gson gson = new Gson();

				final MTCommodityList mCommodities = gson.fromJson(
						responseJson.toString(), MTCommodityList.class);

				CommoditiesCache.getCommoditiesCache()
						.setSingleVarietyCommodities(
								mCommodities.getMtCommodityList());

				commodities = mCommodities.getMtCommodityList();

			}
		};

		callback.execute(objects);
	}

}
